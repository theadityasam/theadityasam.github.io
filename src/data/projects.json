[
	{
		"title": "SatDash",
		"slug": "satdash",
		"description": "Interactive notebooks created with IpyWidgets to visualize Landsat-8 images",
		"writing": {
			"process": "Host of interactive notebooks that can be used to conenct with Google Earth Engine and gather timelapses as well as TCC and FCC images to visualize the impacts of climate change.",
			"processSub": "",
			"conclusion": [
				"Developed IPyWidget for LANDSAT 8 visualization",
				"Gained expertise in using Google Earth Engine",
				"Improved fundamentals of remote sensing techniques and their usages"
			]
		},
		"stack": [
			"Python",
			"IPyWidgets",
			"Heroku"
		],
		"tags": [
			"Remote Sensing",
			"Landsat-8",
			"Google Earth Engine"
		],
		"source": "https://github.com/theadityasam/satdash",
		"demo": "https://satdash.herokuapp.com/",
		"thumb": "./images/SATDASH3.png",
		"images": [
			"./images/SATDASH2.png",
			"./images/SATDASH4.png",
			"./images/SATDASH3.png"
		],
		"resources": [
			"https://earthengine.google.com/",
			"https://www.usgs.gov/core-science-systems/nli/landsat/landsat-8",
			"https://docs.google.com/presentation/d/1p8o5_qJIJQnMy-z_sgZRag0jQwAWXbzzIWUwcV4trew/edit?usp=sharing",
			"https://github.com/theadityasam/satdash/blob/master/Project_Report%20(2).pdf"
		]
	},
	{
		"title": "CPUSimulator",
		"slug": "cpusim",
		"description": "A CPU process scheduling simulator created in JavaFX",
		"writing": {
			"process": "A process scheduling simulator that simulates different scheduling algorithms such as First Come First Serve (FCFS), Round Robin (RR), Shortest Job First (SJF), Shortest Remaining Time First (SRTF), Priority Pre-emptive(PP) and Priority Non Pre-emptive(PNP).",
			"processSub": "I created a feature rich simulator that was clean, intuitive and supported changing speeds, pause, resume and stop functions. Users can input their own job table as well as generate a random job table. The ready queue as well as Gantt chart is displayed after every second for greater understanding of the working of the algorithms.",
			"conclusion": [
				"Developed applications with Java language",
				"Gained expertise in using GUI builders",
				"Improved skills writing dynamic functions that do more with less code",
				"Improved fundamentals of OOPS and Operating Systems"
			]
		},
		"stack": [
			"JavaFX",
			"Netbeans"
		],
		"tags": [
			"Java",
			"Operating Systems",
			"OOPS",
			"CS Fundamentals"
		],
		"source": "https://github.com/theadityasam/processSimulator",
		"demo": "https://github.com/theadityasam/processSimulator",
		"thumb": "./images/PROCESS-SIM1.png",
		"images": [
			"./images/PROCESS-SIM1.png",
			"./images/PROCESS-SIM2.png"
		],
		"resources": [
			"https://openjfx.io/",
			"https://www.tutorialspoint.com/operating_system/os_process_scheduling_algorithms.htm"
		]
	}
]